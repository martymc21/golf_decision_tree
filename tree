
# coding: utf-8

# In[ ]:


import pandas as pd
from sklearn import tree


# In[ ]:


#create empty data frame
golf_df = pd.DataFrame


# In[ ]:


#add outlook
golf_df['Outlook'] = ['sunny', 'sunny', 'overcast', 'rainy', 'rainy','rainy',
                     'overcast','sunny','sunny','rainy','sunny','overcast', 'overcast','rainy']
#add temperature
golf_df['Temperature'] = [92,86,83,70,60,53,62,
                         75,57,72,78,69,81,71]

#add humidity
golf_df['Humidity'] = [40.3, 63.1, 35.3, 86.3, 72.4, 22.7, 27.0,
                      80.7, 15.4, 25.1, 18.6, 58.3, 27.2, 39.3]

#add windy
golf_df['Windy'] = ['false', 'true', 'false', 'false', 'false','true','true'
                   'false','false','false','true','true','false','true']

#add play
golf_df['Play'] = ['no','no','yes','yes','yes','no','yes','no','yes','yes','yes',
                   'yes','yes','no']

golf_df


# In[ ]:


#one hot encoding using pandas instead of sklearn one hot encoder for numerical data
one_hot_data = pd.get_dummies(golf_df[['Outlook', 'Windy']])

#print out this new formatted data to see what happened
one_hot_data


# In[ ]:


#joining continuous data with newly encoded data
#to do this we're pandas .join function to join the two data frames back together
golf_one_hot =  golf_df[['Temperature', 'Humidity']].join(one_hot_data)
golf_one_hot


# In[ ]:


#creating a empty decision tree classifier and assign it to the variable clf
#fitting the decision tree with our one_hot_data and our target feature 'play'
#and assign it to clf_train
clf = tree.DecisionTreeClassifier()

#fitting decision tree to newly encoded data
clf_train = clf.fit(golf_one_hot, golf_df['Play'])

print(tree.export_graphviz(clf_train, None))


# ### Shortcomings
# 
# Our model has a few weaknesses:
# 
# 1. Limited Inputs
# 
# 2. Assumptions
